// Generated by view binder compiler. Do not edit!
package com.example.easyfood.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.easyfood.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMealDetailesBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final FloatingActionButton btnSave;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final CoordinatorLayout detailsRoot;

  @NonNull
  public final ImageView imgMealDetail;

  @NonNull
  public final ImageView imgYoutube;

  @NonNull
  public final LinearLayout mealInfo;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvAreaInfo;

  @NonNull
  public final TextView tvCategoryInfo;

  @NonNull
  public final TextView tvContent;

  @NonNull
  public final TextView tvInstructions;

  private ActivityMealDetailesBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBar, @NonNull FloatingActionButton btnSave,
      @NonNull CollapsingToolbarLayout collapsingToolbar, @NonNull CoordinatorLayout detailsRoot,
      @NonNull ImageView imgMealDetail, @NonNull ImageView imgYoutube,
      @NonNull LinearLayout mealInfo, @NonNull LinearProgressIndicator progressBar,
      @NonNull Toolbar toolbar, @NonNull TextView tvAreaInfo, @NonNull TextView tvCategoryInfo,
      @NonNull TextView tvContent, @NonNull TextView tvInstructions) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.btnSave = btnSave;
    this.collapsingToolbar = collapsingToolbar;
    this.detailsRoot = detailsRoot;
    this.imgMealDetail = imgMealDetail;
    this.imgYoutube = imgYoutube;
    this.mealInfo = mealInfo;
    this.progressBar = progressBar;
    this.toolbar = toolbar;
    this.tvAreaInfo = tvAreaInfo;
    this.tvCategoryInfo = tvCategoryInfo;
    this.tvContent = tvContent;
    this.tvInstructions = tvInstructions;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMealDetailesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMealDetailesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_meal_detailes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMealDetailesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.btn_save;
      FloatingActionButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      CoordinatorLayout detailsRoot = (CoordinatorLayout) rootView;

      id = R.id.img_meal_detail;
      ImageView imgMealDetail = ViewBindings.findChildViewById(rootView, id);
      if (imgMealDetail == null) {
        break missingId;
      }

      id = R.id.img_youtube;
      ImageView imgYoutube = ViewBindings.findChildViewById(rootView, id);
      if (imgYoutube == null) {
        break missingId;
      }

      id = R.id.meal_info;
      LinearLayout mealInfo = ViewBindings.findChildViewById(rootView, id);
      if (mealInfo == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_areaInfo;
      TextView tvAreaInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvAreaInfo == null) {
        break missingId;
      }

      id = R.id.tv_categoryInfo;
      TextView tvCategoryInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryInfo == null) {
        break missingId;
      }

      id = R.id.tv_content;
      TextView tvContent = ViewBindings.findChildViewById(rootView, id);
      if (tvContent == null) {
        break missingId;
      }

      id = R.id.tv_instructions;
      TextView tvInstructions = ViewBindings.findChildViewById(rootView, id);
      if (tvInstructions == null) {
        break missingId;
      }

      return new ActivityMealDetailesBinding((CoordinatorLayout) rootView, appBar, btnSave,
          collapsingToolbar, detailsRoot, imgMealDetail, imgYoutube, mealInfo, progressBar, toolbar,
          tvAreaInfo, tvCategoryInfo, tvContent, tvInstructions);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
